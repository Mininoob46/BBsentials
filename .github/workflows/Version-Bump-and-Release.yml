name: Build Mod and Release

on:
  push:
    branches:
      - hypeswap

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: üîÑ Check Out Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚òï Set Up Java Environment
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üì¶ Cache Gradle Packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: üîç Extract Current Version
        id: get_version
        shell: bash
        run: |
          VERSION_LINE=$(grep '^modVersion = ' gradle/libs.versions.toml)
          VERSION=$(echo $VERSION_LINE | sed 's/modVersion = "\(.*\)"/\1/')
          echo "Current version is $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: üöÄ Increment Version Number
        id: bump_version
        shell: bash
        run: |
          IFS='.' read -r major minor patch extra <<< "${{ steps.get_version.outputs.version }}"
          patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$patch"
          echo "New version is $NEW_VERSION"
          sed -i "s/modVersion = \".*\"/modVersion = \"$NEW_VERSION\"/" gradle/libs.versions.toml
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: üìù Update Mod Metadata
        shell: bash
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          if [ -f src/main/resources/META-INF/mods.toml ]; then
            sed -i "s/version=\".*\"/version=\"$NEW_VERSION\"/" src/main/resources/META-INF/mods.toml
          fi
          if [ -f src/main/resources/fabric.mod.json ]; then
            sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" src/main/resources/fabric.mod.json
          fi

      - name: üî® Build the Mod
        run: |
          chmod +x ./gradlew
          ./gradlew clean build


      - name: üéÅ Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mod-jar
          path: build/libs/*.jar

      - name: üîñ Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add gradle/libs.versions.toml
          if [ -d "src/main/resources" ] && [ -n "$(git status --porcelain src/main/resources)" ]; then
            git add src/main/resources
          fi
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }} [skip ci]" || echo "No changes to commit"
          git push origin HEAD:hypeswap

      - name: üåü Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
          tag_name: "v${{ steps.bump_version.outputs.new_version }}"
          name: "Release v${{ steps.bump_version.outputs.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
